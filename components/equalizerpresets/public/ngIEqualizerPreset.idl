/*
//
// BEGIN NIGHTINGALE GPL
//
// This file is part of the Nightingale web player.
//
// http://getnightingale.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END NIGHTINGALE GPL
//
*/

#include "nsISupports.idl"

interface nsIArray;
interface nsIStringBundle;

/**
 * \interface ngIEqualizerPreset
 * \brief Simple default interface for equalizer presets.
 * \note See ngIMutableEqualizerPreset for an editable preset.
 */
[scriptable, uuid(63191b1d-6bf7-4356-a22a-0dd59dec3490)]
interface ngIEqualizerPreset : nsISupports
{
    /**
     * \brief Name of the preset, used as unique ID and may be visible to the user
     */
    readonly attribute AString name;

    /**
     * \brief The values array holds the values for the bands.
     * \note Should have the same length as the equalizer has bands.
     * \note Item values should be between -1 and 1, implemented as nsISupportsDouble.
     */
    readonly attribute nsIArray values;
};

/**
 * \interface ngIMutableEqualizerPreset
 * \brief Basic implementation of a mutable preset.
 * \note Should not be exposed in an API, or as MDN would say "Consumers of
 *       ngIEqualizerPreset should not QueryInterface to
 *       ngIMutableEqualizerPreset unless they own the preset".
 */
[scriptable, uuid(e0a64e39-f602-4061-81ae-5cbc6954e038)]
interface ngIMutableEqualizerPreset : ngIEqualizerPreset
{
    /**
     * \brief Set the name attribute of the preset.
     */
    void setName(in AString aName);

    /**
     * \brief Set the values of the preset.
     * \throw NS_ERROR_ILLEGAL_VALUE if the supplied array does not have the 
     *        same length as teh equalizer has bands.
     */
    void setValues(in nsIArray aValues);
};

/**
 * \interface ngILocalizableEqualizerPreset
 * \brief Variant of a writable preset which makes the name of the preset
 *        localizable
 */
[scriptable, uuid(904eb1f2-434c-449b-a574-9ec08c6ee50e)]
interface ngILocalizableEqualizerPreset: ngIEqualizerPreset
{
    /**
     * \brief Name of the string in the stringBundle
     */
    attribute AString property;

    /**
     * \brief String bundle to get the localized name from
     */
    attribute nsIStringBundle stringBundle;

    /**
     * \brief Set the values of the preset.
     * \throw NS_ERROR_ILLEGAL_VALUE if the supplied array does not have the 
     *        same length as teh equalizer has bands.
     */
    void setValues(in nsIArray aValues);
};