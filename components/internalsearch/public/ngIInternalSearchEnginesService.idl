/*
//
// BEGIN NIGHTINGALE GPL
//
// This file is part of the Nightingale web player.
//
// http://getnightingale.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END NIGHTINGALE GPL
//
*/

#include "nsISupports.idl"

interface ngIInternalSearchEngine;

[scriptable, uuid(d154ac90-7953-11e2-b92a-0800200c9a66)]
interface ngIInternalSearchEnginesService : nsISupports
{
  /**
   * \briefRegister a search engine to be handled as internal search. Shows the engine if it was hidden before.
   * \param searchEngineName Name to register the search engine with
   * \param contractID Part of the ID of the contract implementing sbISearchEngine for the engine. The
   *        contract must be @songbirdnest.com/Songbird/{contractIDPart};1
   * \param liveSearch Indicates, whether the engine supports live search
   * \return A boolean, true if the registration was successful
   */
  boolean registerInternalSearchEngine(in AString searchEngineName, in string contractID, [optional] in boolean liveSearch);
  /**
   * \brief Unregister a search engine to be handled as intenral search. The engine is rehidden if it was hidden before being registered.
   * \param searchEngineName Name the search engine was registered with
   */
  void unregisterInternalSearchEngine(in AString searchEngineName);
  /**
   * \param searchEngineName Name the search engine was registered with
   * \return The ngIInternalSearchEngine for the specified search engine
   */
  ngIInternalSearchEngine getInternalSearchEngine(in AString searchEngineName);
};
